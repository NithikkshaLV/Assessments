# -*- coding: utf-8 -*-
"""Internal2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NRxsAOokSH8wwiToGvwmW0kzYZtfmG4f
"""

import pandas as pd

import numpy as np

#1
arr=np.array([[1,2,3],[4,5,6]])
sum=np.sum(arr)
min=np.min(arr)
max=np.max(arr)
mean=np.mean(arr)
st=np.std(arr)
print(sum)
print(min)
print(max)
print(mean)
print(st)

#2
health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3

def normalise(data):
    mean = np.mean(data, axis=0)
    std = np.std(data, axis=0)
    normalized_data = (data - mean) / std
    return normalized_data

normalized_data = normalise(health_data)
print(normalized_data)

#3
scores = np.array([[30, 170, 200], [40, -1, 80], [25, 160, -1]])
import numpy as np
averages = []
for marks in scores.T:
    average = np.mean(marks[marks != -1])
    averages.append(average)
print(averages)

#4
a=np.array([15,25])
arr=np.linspace(15,25,24)
print(arr)

#5
import numpy as np
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
print(daily_closing_prices)
window_size = 5
['daily_closing_prices'].rolling(window=5).mean()

#6
pr = np.array([[[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]]])

y=np.array([[[False, False, False],
                              [False, False, True],
                              [True, True, True]]])

ans=pr[y]
print(ans)

#7
import numpy as np
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])

det=np.dot(properties_matrix,properties_matrix)
det

#8
pr = np.array([[[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]]])

y=np.array([[[False, False, False],
                              [False, False, True],
                              [True, True, True]]])

ans=pr[y]
print(ans)

#9
import pandas as pd
data = {
    'Name' : ['Alice','Bob','Charlie','David','Eve','Frank','Grace'],
    'Age'  : [25,30,35,40,45,50,55],
    'City' : ['New York','Los Angeles','Chicago','Houston','Pheonix','Miami','Boston'],
    'Department': ['HR','IT','Finance','Marketing','Sales','IT','HR']
}
df = pd.DataFrame(data)
df = df[['Name', 'City']][df['Age'] > 45][df['Department']!='HR']
df.set_index('Name', inplace=True)
print(df)

#11
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}

f=pd.DataFrame(data)
#print(f)

filtered_df = f[(['Category'] == 'Fruit') & (f['Promotion'] == False) & (f['Price'] > f[f['Category'] == 'Fruit']['Price'].mean())]

print(filtered_df)

#10
data = {'Department':['Electronics','Electronics','Clothing','Clothing','Home goods'],
        'SalesPerson':['Alice','Bob','Charlie','David','Eve'],
        'Sales':[70000,50000,30000,40000,60000]}
df = pd.DataFrame(data)
avg_salesperson = df.groupby(['Department', 'SalesPerson'])['Sales'].mean().reset_index()
avg_department = avg_salesperson.groupby('Department')['Sales'].mean().reset_index()
ranked_departments = avg_department.sort_values(by='Sales', ascending=False)
print(ranked_departments)

#12
employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}

project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}

project_data = pd.DataFrame(project_data)
employee_data=pd.DataFrame(employee_data)
merged = employee_data.merge(project_data, on='Employee' ,how='left')
merged.fillna('Not assigned', inplace=True)
print(merged)

#13
sport=pd.read_csv("/content/Q13_sports_team_stats.csv")
sport.head()

ratio=sport['Wins']/10
print(ratio)
avg=sport.groupby(['TeamID'])['Wins'].mean().reset_index()
print(avg)

#14
customer=pd.read_csv("/content/Q14_customer_purchases.csv")
customer.head()

#15
st=pd.read_csv("/content/Q15_student_grades.csv")
st.head()

performance = st.groupby(['Subject'])['Grade'].mean().reset_index()
print(performance)

#history needs more educational support





























































